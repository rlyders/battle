 COMMON SHARED CPLAYER,LPLAYER

 '@@@@@@@@@@@@@@@@
 '@@@@ BATTLE @@@@
 '@@@@@@@@@@@@@@@@

 SCREEN 1:KEY OFF 'CLEAR ,,,32768!:SCREEN 5:KEY OFF
 DIM L(320),P1(38),P2(38),B1(4),B2(4),V(2),C(2),PL(2),PR(2),A(2),P(2),X(2),_
 Y(2),SCORE(11)

 'CPLAYER-CURRENT PLAYER
 '@@@@ Set Opening Variables @@@@
 '<Define>-L(0-319)-Land Y's,P1(0-37)-Player one's ship,
 'P2(0-37)-Player two's ship,B1(0-3)-Player one's bubble,
 'B2(0-3)-Player two's bubble
 '<Define>-CPLAYER-Player,LC-Land/Peak Color,MC-Mountain Color,AC-Angle Color,
 'V(1-2)-Special Player Values,C(1-2)-Player Colors,PT-Power Box Top,
 'PB-Power Box Bottom,PL(1-2)-Player's Power Left,
 'PR(1-2)-Player's Power Right,A(1-2)-Player Angles,LPLAYER-Last Player
 'SBY-SHOT BOX'S TOP,SBB-SHOT BOX'S BACKGROUND COLOR,
 'SBO-SHOT BOX'S OUTLINE COLOR
Initialization:
 CPLAYER=2:LC=7:MC=8:SBY=190:SBO=2:SBB=0
 AC=1:V(1)=1:V(2)=-1:C(1)=2:C(2)=4
 PT=2:PB=PT+5:FOR L=1 TO 2:P(L)=30:PL(L)=10+150*(L-1):PR(L)=PL(L)+100:NEXT L
 A(1)=45:A(2)=-45:CLS:RANDOMIZE TIMER
 CALL CHOOSE.PLAYER.SITE
 CALL CREATE.LAND
 CALL CREATE.IMAGES
 CALL DRAW.LANDSCAPE
 CALL DRAW.SCREEN

Main.Loop:
 CALL SWITCH.PLAYERS
 CALL USER.INPUT(CUE)
 IF CUE=1 THEN GOTO INITIALIZATION
 CALL INITIAL.BUBBLE
 CALL FIRE.BUBBLE.MOVEMENT
 GOTO Main.Loop

SUB DRAW.SCREEN STATIC
 STATIC L,X
 SHARED PL(),PR(),PB,AC,PT,C(),MC,P(),X(),Y(),A(),V(),SBO,SBB,SBY
 '<Loops>-L-Player,X-X Pos For Dividers In Power Box
 '<Use>-PL(),PR(),PB,AC,PT,C(),MC,P(),X(),Y(),A(),V()
 FOR L=1 TO 2
 LINE(PL(L),PT)-(PR(L),PB),AC,BF
 LINE(PL(L),PT-1)-(PR(L)+1,PB+1),C(L),B
 LINE(PL(L),PT)-(PL(L)+P(L),PB),MC,BF
 FOR X=0 TO P(L) STEP 10:LINE(PL(L)+X,PT)-(PL(L)+X,PB),C(L):NEXT X
 PSET(X(L),Y(L)),0
 DRAW "C=" + VARPTR$(AC) + "TA=" + VARPTR$(A(L))
 IF L=1 THEN
  DRAW"R7"
 ELSE
  DRAW"L7"
 END IF
 LOCATE 1,PR(L)/8+1:PRINT USING"###ø";V(L)*A(L)
 NEXT L
 LINE(0,SBY+9)-(319,SBY),SBO,B
 PAINT(160,195),SBB,SBO
END SUB

SUB Create.Land STATIC
 STATIC YINC,X,L
 SHARED L(),X1,X2,Y(),X()
 '(Define>-Yinc:Up/Dwn Value For Land
 '<loops>-X-Land pos,L-Player
 '<Use)-L(),X1,X2,Y(),X()
 X1=INT(RND*100)+60:X2=X1+INT(RND*100)+60
 L(0)=INT(RND*95)+100
 FOR X=1 TO 319:IF X<X1 OR X>X2 THEN YINC=INT(RND*3)-1 ELSE _
     YINC=INT(RND*15)-7
 IF X<>X(1)-10 AND X<>X(2)-10 THEN 410
 FOR XX=X TO X+20:L(XX)=L(XX-1):NEXT XX:X=XX
410 IF L(X-1)+YINC<195 THEN L(X)=L(X-1)+YINC ELSE L(X)=L(X-1)
 NEXT X:FOR L=1 TO 2:Y(L)=L(X(L))-7:NEXT L
END SUB

SUB DRAW.LANDSCAPE STATIC
 STATIC X
 SHARED LC,L(),MC
 '<Loops>-X-Land Value
 '<Use>-LC,L(),MC
 PSET(0,L(0)),LC
 FOR X=1 TO 319:LINE(X,L(X))-(X-1,L(X-1)),LC:NEXT X:PAINT(1,199),MC,LC
END SUB

SUB CHOOSE.PLAYER.SITE STATIC
 SHARED X()
 STATIC L
 '<Use>-X()
 '<Loops>-L-Player
 FOR L=1 TO 2:X(L)=20+180*(L-1)+INT(RND*100):NEXT L
END SUB

SUB CREATE.IMAGES static
 shared x(),y(),c(),B1(),B2(),AC,P1(),P2()
 STATIC L
 '<Use>-X(),Y(),C(),B1,B2,AC,P1,P2
 '<Loops>-L-Player
 FOR L=1 TO 2
 CIRCLE(X(L),Y(L)),2,1
 PAINT(X(L),Y(L)),C(L),1
 IF L=1 THEN GET(X(L)-2,Y(L)-2)-(X(L)+2,Y(L)+2),B1
 IF L=2 THEN GET(X(L)-2,Y(L)-2)-(X(L)+2,Y(L)+2),B2
 LINE(X(L)-2,Y(L)-2)-(X(L)+2,Y(L)+2),0,BF
 CIRCLE(X(L),Y(L)),9,AC
 PAINT(X(L),Y(L)),C(L),AC
 IF L=1 THEN GET(X(L)-9,Y(L)-7)-(X(L)+9,Y(L)+7),P1
 IF L=2 THEN GET(X(L)-9,Y(L)-7)-(X(L)+9,Y(L)+7),P2
 NEXT L
END SUB

SUB SWITCH.PLAYERS static
 '<Use>-CPLAYER,LPLAYER
 IF CPLAYER=1 THEN CPLAYER=2:LPLAYER=1 ELSE CPLAYER=1:LPLAYER=2
END SUB

SUB USER.INPUT(cue) STATIC
 SHARED A(),P(),PV
 STATIC A$,AV,PV,SV
 '<Use>-A(),P()
 '<Define>-A$-Key Pressed,A-Angle,P-Power,AV-Angle Value,PV-Power Value,_
	  'SV-Ship Value
 AV=0:PV=0:CUE=0
720 A$=INKEY$:ON LEN(A$)+1 GOTO 720,740,760
740 IF A$=CHR$(13) THEN EXIT SUB
    IF A$=CHR$(27) THEN CUE=1:EXIT SUB
    GOTO 720
760 A$=RIGHT$(A$,1)
 IF A$=CHR$(72) THEN AV=1
 IF A$=CHR$(80) THEN AV=-1
 IF A$=CHR$(77) THEN PV=1
 IF A$=CHR$(75) THEN PV=-1
 IF A$=CHR$(71) THEN SV=1
 IF A$=CHR$(79) THEN SV=-1
 IF PV THEN CALL DISPLAY.POWER(PV)
 IF AV THEN CALL DISPLAY.ANGLE(AV)
 'IF SV THEN CALL MOVE.SHIP(SV)
 GOTO 720
END SUB

SUB DISPLAY.POWER(PV) STATIC
 STATIC P,PL
 SHARED PL(),PR(),P(),PT,PB,PC,C(),MC,AC
 '<Use>-PL(),PR(),P(),PV,PT,PB,PC,C(),MC
 '<Define>-PL-Power Left
 P=P(CPLAYER)
 IF (P=0 AND PV=-1) OR (P=100 AND PV=1) THEN PV=0:PLAY"MF O3 C64":EXIT SUB
 IF PV=-1 THEN LINE (PL(CPLAYER)+P,PT)-(PL(CPLAYER)+P,PB),AC,B:GOTO 920
 IF FIX((P+PV)/10)=(P+PV)/10 THEN PC=C(CPLAYER) ELSE PC=MC
 LINE (PL(CPLAYER)+P+1,PT)-(PL(CPLAYER)+P+1,PB),PC,B
920 P=P+PV:PV=0:P(CPLAYER)=P
END SUB

SUB DISPLAY.ANGLE(AV) STATIC
 Shared AC,A(),C(),X(),Y(),V(),PR()
 Static A
 '<Use-A(),C(),X(),Y(),V(),AV
 '<Define>-A-Angle
 A=A(CPLAYER)
 IF A<=-360 THEN A=0
 IF A=>360 THEN A=-0
 PSET(X(CPLAYER),Y(CPLAYER)),0
 DRAW "C=" + VARPTR$(C(CPLAYER)) + "TA=" + VARPTR$(A)
 IF CPLAYER=1 THEN
  DRAW"R7"
 ELSE
  DRAW"L7"
 END IF
 A=A+V(CPLAYER)*AV
 PSET(X(CPLAYER),Y(CPLAYER)),0
 DRAW "C=" + VARPTR$(AC) + "TA=" + VARPTR$(A)
 IF CPLAYER=1 THEN
  DRAW"R7"
 ELSE
  DRAW"L7"
 END IF
 LOCATE 1,PR(CPLAYER)/8+1:PRINT USING"###ø";V(CPLAYER)*A
 AV=0:A(CPLAYER)=A
end sub

'@@@@ MOVE PLAYER UP @@@@

SUB INITIAL.BUBBLE STATIC
 SHARED X1,Y1,T,YINC,XINC,LX,LY,X,Y,Y(),X(),V(),A(),P(),B1(),B2(),YPB,S
 '<Use>-X(),V(),A(),P(),CPLAYER,LPLAYER,B1,B2
 '<Define>-X1-Initial X,Y1-Initial Y,T-Initial Time,_
 'Yinc-Bubble Y Increment,XINC-Bubble X Increment,LX-Last X,LY-Last Y,_
 'X-Bubble X Pos,Y-Bubble Y Pos
 X1=X(CPLAYER)+V(CPLAYER)*9*COS(A(CPLAYER)*22/7/180)
 Y1=Y(CPLAYER)+V(LPLAYER)*7.5*SIN(A(CPLAYER)*22/7/180)
 YPB=0:T=.1-.5/(P(CPLAYER)*200)
 YINC=P(CPLAYER)*SIN((180*(CPLAYER-1)+A(CPLAYER))*22/7/180)
 XINC=P(CPLAYER)*COS((180*(CPLAYER-1)+A(CPLAYER))*22/7/180)
 S=0:S=S+T:X=X1+XINC*S:Y=-(YINC*S-4.9*S^2-Y1)
 LX=X:LY=Y

IF CPLAYER=1 THEN
  PUT(X,Y),B1
 ELSE
  PUT(X,Y),B2
 END IF
END SUB

SUB FIRE.BUBBLE.MOVEMENT STATIC
 SHARED S,T,X,X1,XINC,Y,Y1,YINC,PB,YPB,L(),X(),Y(),B1(),B2(),LX,LY
 '<Use>-S,T,X,X1,XINC,Y,Y1,YINC,PB,L(),LPLAYER,X(),Y(),CPLAYER,B1,B2,LX,LY
2110 S=S+T:X=X1+XINC*S:Y=-(YINC*S-4.9*S^2-Y1)
 IF Y<PB THEN IF YPB=0 THEN YPB=1:CALL ERASE.BUBBLE:GOTO 2110 ELSE 2110
 IF X<1 OR X>319 THEN CALL ERASE.BUBBLE:EXIT SUB ELSE IF Y>L(X) OR_
    Y>199-7 THEN CALL ERASE.BUBBLE:CALL DESTROY.LAND:CALL PLOT.SHOT:EXIT SUB
 IF X>X(LPLAYER)-9 AND X<X(LPLAYER)+9 AND Y>Y(LPLAYER)-7 AND Y<Y(LPLAYER)+7 THEN
    CALL ERASE.BUBBLE
    CALL PLOT.SHOT
    CALL ADD.POINTS
    EXIT SUB
 END IF
 IF YPB=0 THEN IF CPLAYER=1 THEN PUT(LX,LY),B1 ELSE PUT(LX,LY),B2
 IF CPLAYER=1 THEN PUT(X,Y),B1 ELSE PUT(X,Y),B2
 YPB=0:LX=X:LY=Y:GOTO 2110
END SUB

SUB ERASE.BUBBLE STATIC
 SHARED CPLAYER,LX,LY,B1(),B2()
 '<Use>-CPLAYER,LX,LY,B1,B2
 IF CPLAYER=1 THEN PUT(LX,LY),B1 ELSE PUT(LX,LY),B2
END SUB

SUB ADD.POINTS STATIC
 BEEP:SCORE(CPLAYER)=SCORE(CPLAYER)+POINTS
END SUB

SUB Destroy.Land STATIC
 SHARED X,Y,LX,LY,L(),LC
 STATIC XX,YY,LLXX,BEGX,ENDX
 '<Use>-X
 '<Loops>-XX-Land X Pos
2290 BEGX=X-ABS(((X-LX)*(Y-LY))/(RND*2+2))
 ENDX=X+ABS(((X-LX)*(Y-LY))/(RND*2+2))
 IF BEGX<1 THEN BEGX=1
 IF ENDX>319 THEN ENDX=319
 LLXX=L(BEGX-1)
 FOR XX=BEGX TO ENDX
 IF ABS(Y-L(XX))>10 THEN LLXX=L(XX):GOTO 2320
 YY=L(XX)+ABS(((ABS(X-LX)+20)/(ABS(X-XX)/10+1))*((ABS(Y-LY)+20)/_
    (ABS(Y-L(XX)/10+1))))
 'YY=Y+ABS(((X-LX)*(Y-LY))/((X-XX)*(Y-L(XX))*(RND*2+1)*7))
 IF YY>199 THEN YY=200
 LINE(XX,L(XX))-(XX,YY),0
 LINE(XX,L(XX))-(XX-1,LLXX),0:LLXX=L(XX):L(XX)=YY
 LINE(XX,L(XX))-(XX-1,L(XX-1)),LC
2320 NEXT XX
 LINE(XX,L(XX))-(XX-1,LLXX),0
 LINE(XX,L(XX))-(XX-1,L(XX-1)),LC
END SUB

SUB fire.images STATIC
 RANDOMIZE TIMER
 FC=0:LFX=1:LFY=1:FOR FX=1 TO 9
 IF FC=4 THEN FC=14 ELSE FC=4
 FY=LFY+RND*5-2
 LINE(LFX,LFY)-(FX,FY),FC
 LFX=FX:LFY=FY:NEXT FX
 FOR FX=11 TO 20
 FY=LFY-RND*5-2
 LINE(LFX,LFY)-(FX,FY),FC
 LFX=FX:LFY=FY:NEXT FX
END SUB

SUB PLOT.SHOT(SHOTX) STATIC
    SHARED LSHOTX(),C(),SBY,SBB
    LINE(LSHOTX(CPLAYER),SBY+1)-(LSHOTX(CPLAYER),SBY+3),SBB
    LINE(SHOTX,SBY)-(SHOTX,SBY+8),C(CPLAYER)
    LSHOTX(CPLAYER)=SHOTX
END SUB
