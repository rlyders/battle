DIM L(320),P1(38),P2(38),B1(4),B2(4),V(2),C(2),PL(2),PR(2),A(2),P(2),X(2)
DIM Y(2),SCORE(11),SHOTX(2,10),LOAN(2,5,4),CLOAN(2),SQ(2),TECHNIQUE(4,5)
DIM CTECHNIQUE(2),W(2),RESOURCE(4),SCOST(2)
'COMMON CPLAYER,LPLAYER,LC,PC,MC,SBY,SBO,SBB,AC,V(),C(),PT,PB,P(),PL(),L()
'COMMON PR(),X(),Y(),A(),B1(),B2(),P1(),P2(),SCORE(),SHOTX(),POINTS,LX,LY
'COMMON X1,Y1,T,YINC,XINC,X,Y,YPB,S,HOVER,RED,GREEN,BLACK,BROWN,SO,PBB
'COMMON PBL,PBC
'REM $INCLUDE: 'HEADER.BAS'

'CPLAYER-CURRENT PLAYER
 '@@@@ Set Opening Variables @@@@
 '<Define>-L(0-319)-Land Y's,P1(0-37)-Player one's ship,
 'P2(0-37)-Player two's ship,B1(0-3)-Player one's bubble,
 'B2(0-3)-Player two's bubble
 '<Define>-CPLAYER-Player,LC-Land/Peak Color,MC-Mountain Color,AC-Angle Color,
 'V(1-2)-Special Player Values,C(1-2)-Player Colors,PT-Power Box Top,
 'PB-Power Box Bottom,PL(1-2)-Player's Power Left,
 'PR(1-2)-Player's Power Right,A(1-2)-Player Angles,LPLAYER-Last Player
 'SBY-SHOT BOX'S TOP,SBB-SHOT BOX'S BACKGROUND COLOR,
 'SBO-SHOT BOX'S OUTLINE COLOR

 '@@@@@@@@@@@@@@@@@@@@@@
 '@@@@ BATTLE 'Main'@@@@
 '@@@@@@@@@@@@@@@@@@@@@@

 CONST SBY=190, BLACK=0, GREEN=1, RED=2, BROWN=3, MXLOAN=5, PT=2, PB=PT+5
 CONST LC=BROWN, MC=RED, SBO=BROWN, SBB=BLACK, AC=BROWN
 CONST PBB=RED, PBL=BLACK, PBC=BROWN, SO=BROWN, PI=3.141592654

 SCREEN 1,1

 KEY OFF
 COLOR ,BLACK
 'PALETTE 0,4
 'PALETTE 1,8
 'PALETTE 2,6
 'PALETTE 3,1

Initialization:
 CPLAYER=2
 V(1)=1
 V(2)=-1
 C(1)=RED
 C(2)=GREEN
 HOVER=0
 FOR L=1 TO 2
  P(L)=30
  PL(L)=10+150*(L-1)
  PR(L)=PL(L)+100
 NEXT L
 A(1)=45
 A(2)=-45
 CLS
 CLOAN(1)=1
 CLOAN(2)=1
 W(1)=1500
 W(2)=1500
 RANDOMIZE TIMER

 CALL SET.TECHNIQUES
 CALL CHOOSE.PLAYER.SITE
 CALL CREATE.LAND
 CALL CREATE.IMAGES
 CALL DRAW.LAND
 CALL DRAW.SCREEN

MAIN.LOOP:
 CALL SWITCH.PLAYERS
 CALL USER.INPUT(CUE)
 IF CUE=1 THEN GOTO INITIALIZATION
 CALL INITIAL.BUBBLE
 CALL FIRE.BUBBLE.MOVEMENT
 GOTO MAIN.LOOP

SUB DRAW.SCREEN STATIC
 SHARED PL(),PR(),C(),P(),X(),Y(),A(),V()
 '<Loops>-L-Player,X-X Pos For Dividers In Power Box
 '<Use>-PL(),PR(),PB,AC,PT,C(),MC,P(),X(),Y(),A(),V()
 FOR L=1 TO 2
  LINE(PL(L),PT)-(PR(L),PB),PBB,BF
  LINE(PL(L),PT-1)-(PR(L)+1,PB+1),C(L),B
  LINE(PL(L),PT)-(PL(L)+P(L),PB),PBC,BF
  FOR X=10 TO P(L) STEP 10
   LINE(PL(L)+X,PT)-(PL(L)+X,PB),BLACK 'C(L)
  NEXT X
 CALL DRAW.ANGLE(L,AC)
  LOCATE 1,PR(L)/8+1
  PRINT USING"###ø";V(L)*A(L)
 NEXT L
 LINE(0,SBY+9)-(319,SBY),SBO,B
 PAINT(160,195),SBB,SBO
 CALL SHOW.WEALTH
END SUB

SUB CREATE.IMAGES STATIC
 SHARED X(),Y(),C(),B1(),B2(),P1(),P2()
 '<Use>-X(),Y(),C(),B1,B2,AC,P1,P2
 '<Loops>-L-Player
 FOR L=1 TO 2
  CIRCLE(X(L),Y(L)),2,SO
  PAINT(X(L),Y(L)),C(L),SO
  IF L=1 THEN
   GET(X(L)-2,Y(L)-2)-(X(L)+2,Y(L)+2),B1
  END IF
  IF L=2 THEN
   GET(X(L)-2,Y(L)-2)-(X(L)+2,Y(L)+2),B2
  END IF
  LINE(X(L)-2,Y(L)-2)-(X(L)+2,Y(L)+2),BLACK,BF
  CIRCLE(X(L),Y(L)),9,SO
  PAINT(X(L),Y(L)),C(L),SO
  IF L=1 THEN
   GET(X(L)-9,Y(L)-7)-(X(L)+9,Y(L)+7),P1
  END IF
  IF L=2 THEN
   GET(X(L)-9,Y(L)-7)-(X(L)+9,Y(L)+7),P2
  END IF
 NEXT L
END SUB

SUB SWITCH.PLAYERS STATIC
 SHARED CPLAYER,LPLAYER
 '<Use>-CPLAYER,LPLAYER
 IF CPLAYER=1 THEN
  CPLAYER=2
  LPLAYER=1
 ELSE
  CPLAYER=1
  LPLAYER=2
 END IF
END SUB

SUB USER.INPUT(CUE) STATIC
 SHARED A(),P(),HOVER
 STATIC INC
 '<Use>-A(),P()
 '<Define>-A$-Key Pressed,A-Angle,P-Power,AV-Angle Value,PV-Power Value,
	  'SV-Ship Value
 IF INC=0 THEN
  INC=1
 END IF
720
 SHV=0
 SVV=0
 AV=0
 PV=0
 CUE=0
 A$=INKEY$
 ON LEN(A$)+1 GOTO 720,740,760
740
 IF A$="S" OR A$="s" THEN
  AV=INC
  CALL DISPLAY.ANGLE(AV)
 END IF
 IF A$="A" OR A$="a" THEN
  AV=-INC
  CALL DISPLAY.ANGLE(AV)
 END IF
 IF A$="W" OR A$="w" THEN
  PV=INC
  CALL DISPLAY.POWER(PV)
 END IF
 IF A$="Q" OR A$="q" THEN
  PV=-INC
  CALL DISPLAY.POWER(PV)
 END IF
 IF A$=" " THEN
  CALL OPTIONS
 END IF
 IF VAL(A$) THEN
  INC=VAL(A$)
 END IF
 IF A$="0" THEN
  INC=10
 END IF
 IF A$="H" OR A$="h" THEN
  IF HOVER THEN
   HOVER=0
  ELSE
   HOVER=1
  END IF
  CALL SWITCH.HOVER
 END IF
 IF A$=CHR$(13) THEN
  EXIT SUB
 END IF
 IF A$=CHR$(27) THEN
  CUE=1
  EXIT SUB
 END IF
 GOTO 720
760
 A$=RIGHT$(A$,1)
 IF A$=CHR$(72) THEN
  SVV=-INC
  HOVER=0
  CALL SWITCH.HOVER
 END IF
 IF A$=CHR$(80) THEN
  SVV=INC
 END IF
 IF A$=CHR$(77) THEN
  SHV=INC
 END IF
 IF A$=CHR$(75) THEN
  SHV=-INC
 END IF
 IF SHV OR SVV THEN
  CALL MOVE.SHIP(SHV,SVV)
 END IF
GOTO 720
END SUB

SUB DISPLAY.POWER(PV) STATIC
 SHARED PL(),PR(),P(),PC,C(),CPLAYER
 '<Use>-PL(),PR(),P(),PV,C()
 '<Define>-PL-Power Left
 P=P(CPLAYER)
 IF P+PV<=0 THEN
  PV=-P+1
  PLAY"MF O3 C64"
 ELSEIF P+PV>100 THEN
  PV=100-P
  PLAY"MF O3 C64"
 END IF
 IF NOT ABS(PV)=PV THEN
  LINE (PL(CPLAYER)+P+1,PT)-(PL(CPLAYER)+P+PV+1,PB),PBB,BF
  GOTO 920
 END IF
 PC=PBB
 LINE (PL(CPLAYER)+P+1,PT)-(PL(CPLAYER)+P+PV,PB),PC,BF
 PC=0 'C(CPLAYER)
 FOR X=10 TO P+PV STEP 10
  LINE (PL(CPLAYER)+X,PT)-(PL(CPLAYER)+X,PB),PC,B
 NEXT X
920
 P=P+PV
 PV=0
 P(CPLAYER)=P
END SUB

SUB DISPLAY.ANGLE(AV) STATIC
 SHARED A(),C(),V(),PR(),CPLAYER,PC
 '<Use-A(),C(),X(),Y(),V(),AV
 '<Define>-A-Angle
 A=A(CPLAYER)
 CALL DRAW.ANGLE(CPLAYER,C(CPLAYER))
 IF ABS(A)+AV<=0 THEN
  A=V(CPLAYER)*(ABS(A)+AV+360)
 ELSEIF ABS(A)+AV=>360 THEN
  A=V(CPLAYER)*(ABS(A)+AV-360)
 ELSE
  A=A+V(CPLAYER)*AV
 END IF
 A(CPLAYER)=A
 CALL DRAW.ANGLE(CPLAYER,AC)
 LOCATE 1,PR(CPLAYER)/8+1
 PRINT USING"###ø";V(CPLAYER)*A
 AV=0
END SUB

SUB CHOOSE.PLAYER.SITE STATIC
 SHARED X()
 '<Use>-X()
 '<Loops>-L-Player
 FOR L=1 TO 2
  X(L)=20+180*(L-1)+INT(RND*100)
 NEXT L
END SUB

SUB DRAW.LAND STATIC
 SHARED L()
 '<Loops>-X-Land Value
 '<Use>-LC,L(),MC
 PSET(0,L(0)),LC
  LINE(0,L(0))-(1,L(1)),LC
 FOR X=1 TO 319
  LINE -(X,L(X)),LC
 NEXT X
 PAINT(1,199),MC,LC
END SUB

SUB CREATE.LAND STATIC
 SHARED L(),Y(),X()
 '(Define>-Yinc:Up/Dwn Value For Land
 '<loops>-X-Land pos,L-Player
 '<Use)-L(),X1,X2,Y(),X()
 X1=INT(RND*100)+60
 X2=X1+INT(RND*100)+60
 L(0)=INT(RND*95)+85
 FOR X=1 TO 319
  IF X<X1 OR X>X2 THEN
   YINC=INT(RND*3)-1
  ELSE
   YINC=INT(RND*15)-7
  END IF
  IF X<>X(1)-10 AND X<>X(2)-10 THEN
   GOTO 410
  END IF
  FOR XX=X TO X+20
   L(XX)=L(XX-1)
  NEXT XX
  X=XX
410
  IF L(X-1)+YINC<SBY-12 THEN
   L(X)=L(X-1)+YINC
  ELSE
   L(X)=L(X-1)
  END IF
 NEXT X
 FOR L=1 TO 2
  Y(L)=L(X(L))-7
 NEXT L
END SUB

'@@@@ MOVE PLAYER UP @@@@

SUB INITIAL.BUBBLE STATIC
 SHARED X1,Y1,T,YINC,XINC,LX,LY,X,Y,Y(),X(),V(),A(),P(),B1(),B2(),YPB,S
 SHARED CPLAYER,LPLAYER,SQ()
 '<Use>-X(),V(),A(),P(),CPLAYER,LPLAYER,B1,B2
 '<Define>-X1-Initial X,Y1-Initial Y,T-Initial Time,_
 'Yinc-Bubble Y Increment,XINC-Bubble X Increment,LX-Last X,LY-Last Y,_
 'X-Bubble X Pos,Y-Bubble Y Pos
 TIMESTEP=.01
 ANG=A(CPLAYER)+RND*SQ(CPLAYER)
 POW=P(CPLAYER)+RND*SQ(CPLAYER)
 X1=X(CPLAYER)+V(CPLAYER)*9*COS(ANG*PI/180)
 Y1=Y(CPLAYER)+V(LPLAYER)*7.5*SIN(ANG*PI/180)
 YPB=0
 T=TIMESTEP-TIMESTEP/(POW*400)
 YINC=POW*SIN((180*(CPLAYER-1)+ANG)*PI/180)
 XINC=POW*COS((180*(CPLAYER-1)+ANG)*PI/180)
 S=0
 S=S+T
 X=X1+XINC*S
 Y=-(YINC*S-4.9*S^2-Y1)
 LX=X
 LY=Y
 IF CPLAYER=1 THEN
  PUT(X,Y),B1
 ELSE
  PUT(X,Y),B2
 END IF
END SUB

SUB SHOW.FORMULA STATIC
 LOCATE 20,1
 PRINT "x=(vCOS @)t      y=(-1/2)gt^2+(vSIN @)t"
 PRINT "x=("POW"COS "ANG")t      y=(-1/2)"9.81"t^2+("POW"SIN "ANG")t"
END SUB
 'X=(X(CPLAYER)+V(CPLAYER)*9*COS((A(CPLAYER)+RND*SQ(CPLAYER))*PI/180))+((P(CPLAYER)+RND*SQ(CPLAYER))*COS((180*(CPLAYER-1)+(A(CPLAYER)+RND*SQ(CPLAYER)))*PI/180))*S
 'Y=-(((P(CPLAYER)+RND*SQ(CPLAYER))*SIN((180*(CPLAYER-1)+(A(CPLAYER)+RND*SQ(CPLAYER)))*PI/180))*S-4.9*S^2-(Y(CPLAYER)+V(LPLAYER)*7.5*SIN((A(CPLAYER)+RND*SQ(CPLAYER))*PI/180)))

SUB FIRE.BUBBLE.MOVEMENT STATIC
 SHARED S,T,X,X1,XINC,Y,Y1,YINC,YPB,L(),X(),Y(),B1(),B2(),LX,LY,CPLAYER
 SHARED LPLAYER
 '<Use>-S,T,X,X1,XINC,Y,Y1,YINC,PB,L(),LPLAYER,X(),Y(),CPLAYER,B1,B2,LX,LY
2110
 S=S+T
 X=X1+XINC*S
 Y=-(YINC*S-4.9*S^2-Y1)
 POINTS=0
 IF Y<PB THEN
  IF YPB=0 THEN
   YPB=1
   CALL ERASE.BUBBLE
   GOTO 2110
  ELSE
   GOTO 2110
  END IF
 END IF
 IF X<1+7 OR X>319-7 THEN
    IF YPB=0 THEN
     CALL ERASE.BUBBLE
    END IF
    EXIT SUB
 ELSEIF Y>L(X)-7 OR Y>199-7 THEN
    CALL ERASE.BUBBLE
    CALL DESTROY.LAND
    CALL PLOT.SHOT(X)
    EXIT SUB
 END IF
 IF X>X(LPLAYER)-9 AND X<X(LPLAYER)+9 AND Y>Y(LPLAYER)-7 AND Y<Y(LPLAYER)+7 THEN
    CALL ERASE.BUBBLE
    CALL PLOT.SHOT(X)
    CALL ADD.POINTS(POINTS)
    EXIT SUB
 END IF
 IF YPB=0 THEN
  IF CPLAYER=1 THEN
   PUT(LX,LY),B1
  ELSE
   PUT(LX,LY),B2
  END IF
 END IF
 IF CPLAYER=1 THEN
  PUT(X,Y),B1
 ELSE
  PUT(X,Y),B2
 END IF
 YPB=0
 LX=X
 LY=Y
 GOTO 2110
END SUB

SUB ERASE.BUBBLE STATIC
 SHARED CPLAYER,LX,LY,B1(),B2()
 '<Use>-CPLAYER,LX,LY,B1,B2
 IF CPLAYER=1 THEN
  PUT(LX,LY),B1
 ELSE
  PUT(LX,LY),B2
 END IF
END SUB

SUB ADD.POINTS(POINTS) STATIC
 SHARED SCORE()
 BEEP
 SCORE(CPLAYER)=SCORE(CPLAYER)+POINTS
END SUB

SUB FIRE.IMAGES STATIC
 RANDOMIZE TIMER
 FC=BLACK
 LFX=1
 LFY=1
 FOR FX=1 TO 9
  IF FC=4 THEN
   FC=14
  ELSE
   FC=4
  END IF
  FY=LFY+RND*5-2
  LINE(LFX,LFY)-(FX,FY),FC
  LFX=FX
  LFY=FY
 NEXT FX
 FOR FX=11 TO 20
  FY=LFY-RND*5-2
  LINE(LFX,LFY)-(FX,FY),FC
  LFX=FX
  LFY=FY
 NEXT FX
END SUB

SUB MOVE.SHIP(SHV,SVV) STATIC
 SHARED X(),Y(),CPLAYER,P1(),P2(),L(),A(),C(),LPLAYER,HOVER
 X=X(CPLAYER)
 Y=Y(CPLAYER)
 X=X+SHV
 Y=Y+SVV
 IF X+9>319 THEN
  X=319-9
 ELSEIF X-9<0 THEN
  X=9
 END IF
 IF SHV<>0 AND HOVER=0 THEN
  A=SGN(SHV)
  B=X(CPLAYER)+9*A
  C=X+9*A
 ELSE
  A=1
  B=X-9
  C=X+9
 END IF
 YY=L(B)-7
 FOR XX=B TO C STEP A
  IF HOVER THEN
   IF YY+7>L(XX) THEN
    YY=L(XX)-7
   END IF
  ELSEIF Y+7>L(XX) THEN
   IF (SVV>=1) THEN
    Y=L(XX)-7
   ELSEIF SHV THEN
    X=XX-9*A
    XX=C
   END IF
  END IF
 NEXT XX
 IF HOVER THEN
  Y=YY
 END IF
 IF Y<PB+7 THEN
  Y=PB+7
 END IF
 IF X+9>X(LPLAYER)-9 AND X-9<X(LPLAYER)+9 AND Y+7>Y(LPLAYER)-7 AND Y-7<Y(LPLAYER)+7 THEN
  IF SHV THEN
   X=X(LPLAYER)-SGN(SHV)*18
  ELSEIF SVV THEN
   Y=Y(LPLAYER)-SGN(SVV)*14
  END IF
 END IF
 CALL DRAW.ANGLE(CPLAYER,C(CPLAYER))
 IF CPLAYER=1 THEN
  PUT(X(CPLAYER)-9,Y(CPLAYER)-7),P1
 ELSE
  PUT(X(CPLAYER)-9,Y(CPLAYER)-7),P2
 END IF
 IF CPLAYER=1 THEN
  PUT(X-9,Y-7),P1
 ELSE
  PUT(X-9,Y-7),P2
 END IF
 X(CPLAYER)=X
 Y(CPLAYER)=Y
 CALL DRAW.ANGLE(CPLAYER,AC)
END SUB

SUB SWITCH.HOVER STATIC
 SHARED HOVER
 IF HOVER THEN
  LOCATE 1,1
  PRINT "H"
 ELSE
  LOCATE 1,1
  PRINT " "
 END IF
END SUB

SUB DRAW.ANGLE(PLAYER,ANGLECOLOR) STATIC
 SHARED A(),X(),Y()
 DRAW_COMMAND$ = "C" + LTrim$(Str$(ANGLECOLOR)) + " TA" + LTrim$(Str$(A(PLAYER)))
 PSET(X(PLAYER),Y(PLAYER)),BLACK
 DRAW DRAW_COMMAND$
 IF PLAYER=1 THEN
  DRAW"R7"
 ELSE
  DRAW"L7"
 END IF
END SUB

SUB DESTROY.LAND STATIC
 SHARED X,Y,LX,LY,L()
 '<Use>-X
 '<Loops>-XX-Land X Pos
2290
 BEGX=X-ABS(((X-LX)*(Y-LY))/(RND*2+2))
 ENDX=X+ABS(((X-LX)*(Y-LY))/(RND*2+2))
 IF BEGX<1 THEN
  BEGX=1
 END IF
 IF ENDX>319 THEN
  ENDX=319
 END IF
 LLXX=L(BEGX-1)
 FOR XX=BEGX TO ENDX STEP (ABS(ENDX>BEGX)*2-1)
  IF ABS(Y-L(XX))>10 THEN
   LLXX=L(XX)
   GOTO 2320
  END IF
  YY=L(XX)+ABS(((ABS(X-LX)+20)/(ABS(X-XX)/10+1))*((ABS(Y-LY)+20)/_
    (ABS(Y-L(XX)/10+1))))
  'YY=Y+ABS(((X-LX)*(Y-LY))/((X-XX)*(Y-L(XX))*(RND*2+1)*7))
  IF YY>=SBY-1 THEN
   YY=SBY-2
  END IF
  LINE(XX,L(XX)-1)-(XX,YY),BLACK
  LINE(XX,L(XX))-(XX-1,LLXX),BLACK
  LLXX=L(XX)
  L(XX)=YY
  LINE(XX,L(XX))-(XX-1,L(XX-1)),LC
2320
 NEXT XX
 LINE(XX,L(XX))-(XX-1,LLXX),BLACK
 LINE(XX,L(XX))-(XX-1,L(XX-1)),LC
END SUB

SUB PLOT.SHOT(SHOTX) STATIC
 SHARED SHOTX(),C(),CPLAYER,LPLAYER
 IF SHOTX<>SHOTX(CPLAYER,0) THEN
  FOR SHOT=8 TO 1 STEP -1
   SHOTX(CPLAYER,SHOT)=SHOTX(CPLAYER,SHOT-1)
   IF SHOTX(CPLAYER,SHOT)>0 AND SHOTX(CPLAYER,SHOT)<>SHOTX(LPLAYER,0) THEN
    LINE(SHOTX(CPLAYER,SHOT),SBY+1)-(SHOTX(CPLAYER,SHOT),SBY+SHOT),SBB
   END IF
  NEXT SHOT
 END IF
 SHOTX(CPLAYER,0)=SHOTX
 LINE(SHOTX(CPLAYER,0),SBY+1)-(SHOTX(CPLAYER,0),SBY+8),C(CPLAYER)
END SUB

SUB PAUSE STATIC
 R$=INKEY$
 WHILE R$=""
  R$=INKEY$
 WEND
END SUB

SUB OPTIONS STATIC
 SHARED CLOAN(),CPLAYER,X(),Y(),P1(),P2()
 CLS
 OP=0
 WHILE NOT OP=4
  PRINT "1> SHIP QUALITY"
  PRINT "2> LOAN"
  PRINT "3> MANUFACTURING TECHNIQUE"
  PRINT "4> EXIT MENU"
  INPUT "OPTION #:";OP
  IF OP=1 THEN
   CALL SHIP.QUALITY
  ELSEIF OP=2 AND CLOAN(CPLAYER)<MXLOAN THEN
   CALL GET.LOAN
  ELSEIF OP=3 THEN
   CALL DO_TECHNIQUE
  END IF
 WEND
 CLS
 CALL DRAW.LAND
 PUT(X(CPLAYER)-9,Y(CPLAYER)-7),P1
 PUT(X(CPLAYER)-9,Y(CPLAYER)-7),P2
 CALL DRAW.SCREEN
END SUB

SUB GET.LOAN STATIC
 SHARED CPLAYER,LOAN(),CLOAN(),INTEREST%,INSTALLMENT%,PERIODS%,LOAN%
 'LOAN(PLAYER,#,<LOAN(0),INTEREST(1),PERIODS(2),INSTALLMENT(3)>)
 CLS
 INPUT "AMOUNT OF LOAN:";LOAN
 INTEREST=20-15*RND
 PERIODS=INTEREST/2
 INSTALLMENT=INT((LOAN+INTEREST*LOAN/100)/PERIODS)
 PRINT USING"LOAN: $$######.##,  AT ##.##% INTEREST";LOAN,INTEREST
 PRINT USING"IN ## INSTALLMENTS OF $$######.##,";PERIODS,INSTALLMENT
 LOAN(CPLAYER,CLOAN(CPLAYER),LOAN%)=LOAN
 LOAN(CPLAYER,CLOAN(CPLAYER),INTEREST%)=INTEREST
 LOAN(CPLAYER,CLOAN(CPLAYER),PERIODS%)=PERIODS
 LOAN(CPLAYER,CLOAN(CPLAYER),INSTALLMENTS%)=INSTALLMENTS
 W(CPLAYER)=W(CPLAYER)+LOAN
 CALL PAUSE
 CLS
END SUB

SUB SHIP.QUALITY STATIC
 SHARED SQ(),CPLAYER,SCOST()
 CLS
 INPUT "SHIP QUALITY:(1,BEST-5,WORST)";SQ(CPLAYER)
 PRINT "SHIP QUALITY="SQ(CPLAYER);
 PRINT USING ",  PRICE=$$#####.##,";SCOST(CPLAYER)/SQ(CPLAYER)
 CALL PAUSE
 CLS
END SUB

SUB DO_TECHNIQUE STATIC
 SHARED TECHNIQUE(),CTECHNIQUE(),CPLAYER,SCOST(),SQ()
 'TECHNIQUE(#,RESOURCE.PRICE)
 CLS
 LOCATE 5:PRINT "RESOURCE"
 LOCATE 6:PRINT "LABOR"
 LOCATE 7:PRINT "LAND"
 LOCATE 8:PRINT "CAPITAL"
 LOCATE 9:PRINT "ENTREPRE-"
 LOCATE 10:PRINT "NEURIAL"
 LOCATE 11:PRINT "ABILITY"
 FOR TECH=0 TO 3
  LOCATE 5,10+TECH*7
  PRINT USING "TQ_##";TECH+1
  FOR RESOURCE=0 TO 3
   LOCATE 5+RESOURCE+1,10+TECH*7
   PRINT TECHNIQUE(TECH,RESOURCE)
  NEXT RESOURCE
 NEXT TECH
 FOR A=0 TO 3
  LOCATE 13+A
  PRINT USING "TECH _## -> $$#####,.##";A,TECHNIQUE(A,4)
 NEXT A
 LOCATE 20
 INPUT "ENTER DESIRED TECHNIQUE #:";CTECHNIQUE(CPLAYER)
 CTECHNIQUE(CPLAYER)=CTECHNIQUE(CPLAYER)-1
 SCOST(CPLAYER)=TECHNIQUE(CTECHNIQUE(CPLAYER),4)/SQ(CPLAYER)
 PRINT USING "SHIP PRICE:$$#####,.##";SCOST(CPLAYER)
 CALL PAUSE
 CLS
END SUB

SUB SHOW.WEALTH STATIC
 SHARED CPLAYER,W()
 EXIT SUB
 FOR A=1 TO 2
  LOCATE 23,1+(A-1)*25
  PRINT USING "$$#######.##,";W(CPLAYER);
 NEXT A
END SUB

SUB SET.TECHNIQUES STATIC
 SHARED TECHNIQUE(),RESOURCE()
 FOR A=0 TO 3
  RESOURCE(A)=500*RND
 NEXT A
 SUM=0
 FOR A=0 TO 3
  FOR B=0 TO 3
   TECHNIQUE(A,B)=INT(1+RND*15)
   SUM=SUM+RESOURCE(B)*TECHNIQUE(A,B)
  NEXT B
  TECHNIQUE(A,B)=SUM
 NEXT A
END SUB
